openapi: 3.0.1
info:
  title: DX Suite APIs
  version: 1.0.0
servers:
  - url: https://mockbin.org/request/
security:
  - ClientIdHeader: [ ]
paths:
  /workflows/{workflowId}/units:
    post:
      tags:
        - ユニット
      summary: ユニット作成
      description: |
        指定のワークフローに対してユニットを作成します。
      parameters:
        - name: workflowId
          in: path
          description: |
            ワークフローIDは `xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx` 形式の36文字のIDです。
          required: true
          schema:
            type: string
            minLength: 36
            maxLength: 36
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                filename:
                  type: array
                  items:
                    format: binary
                    type: string
                  description: |
                    ユニット登録するファイルを1~100件まで指定します。<br>
                    サポートしている拡張子は `png`, `jpg`, `jpeg`, `pdf`, `tiff` です。
                unitName:
                  type: string
                  minLength: 1
                  maxLength: 128
                  description: |
                    ユニット名を1~128文字で指定します。<br>
                    `半角全角英数記号かなカナ漢字` が使用できます。<br>
                    上記のうち `\/:*?"<>|` は使用不可文字です。
      responses:
        200:
          description: リクエストに成功しました。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitResisterResponse'
        400:
          description: リクエスト情報に誤りがあります。
          content:
            application/json:
              examples:
                response1:
                  summary: "errorCode: 10001"
                  value:
                    errors:
                      - errorCode: 10001
                        message: unitName is a required parameter.
                response2:
                  summary: "errorCode: 10002"
                  value:
                    errors:
                      - errorCode: 10002
                        message: The maximum number of unitId that can be specified at one time is 100.
                response3:
                  summary: "errorCode: 10003"
                  value:
                    errors:
                      - errorCode: 10003
                        message: unitName contains characters that are not allowed. Please check the API specification.
                response4:
                  summary: "errorCode: 120001"
                  value:
                    errors:
                      - errorCode: 120001
                        message: This ID does not exist.
                response5:
                  summary: "errorCode: 120002"
                  value:
                    errors:
                      - errorCode: 120002
                        message: This workflow has not been saved. Please save the workflow and try again.
                response6:
                  summary: "errorCode: 210001"
                  value:
                    errors:
                      - errorCode: 210001
                        message: An unsupported filename extension was detected.
        500:
          $ref: '#/components/responses/InternalServerError'
  /workflows/units/status:
    get:
      tags:
        - ユニット
      summary: ユニット状態取得
      description: |
        指定したユニットの状態を取得します。
      parameters:
        - name: unitId
          in: query
          description: |
            ユニットIDは `xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx` 形式の36文字のIDです。<br>
            1~100件まで指定できます。
          required: true
          style: form
          explode: true
          schema:
            type: array
            minItems: 1
            maxItems: 100
            items:
              type: string
              default: ''
              minLength: 36
              maxLength: 36
      responses:
        200:
          description: リクエストに成功しました。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitStatusResponse'
        400:
          description: リクエスト情報に誤りがあります。
          content:
            application/json:
              examples:
                response1:
                  summary: "errorCode: 10001"
                  value:
                    errors:
                      - errorCode: 10001
                        message: unitId is a required parameter.
                response2:
                  summary: "errorCode: 10002"
                  value:
                    errors:
                      - errorCode: 10002
                        message: The maximum number of unitId that can be specified at one time is 100.
        500:
          $ref: '#/components/responses/InternalServerError'
  /workflows/{workflowId}/units/{unitId}/csv:
    get:
      tags:
        - ユニット
      summary: CSVダウンロード
      description: |
        指定のワークフローの指定のユニットのCSVレコードを取得します。
      parameters:
        - name: workflowId
          in: path
          description: |
            ワークフローIDは `xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx` 形式の36文字のIDです。
          required: true
          schema:
            type: string
            minLength: 36
            maxLength: 36
        - name: unitId
          in: path
          description: |
            ユニットIDは `xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx` 形式の36文字のIDです。
          required: true
          schema:
            type: string
            minLength: 36
            maxLength: 36
      responses:
        200:
          description: リクエストに成功しました。
          content:
            text/csv:
              schema:
                $ref: '#/components/schemas/CsvResponse'
        400:
          description: リクエスト情報に誤りがあります。
          content:
            application/json:
              examples:
                response1:
                  summary: "errorCode: 120001"
                  value:
                    errors:
                      - errorCode: 120001
                        message: This ID does not exist.
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  securitySchemes:
    ClientIdHeader:
      type: apiKey
      description: |
        Workflowトップ > アカウント > 設定 > APIコンソール から発行したAPIキーを指定してください。
      name: apikey
      in: header
  schemas:
    UnitResisterResponse:
      type: object
      properties:
        unitId:
          type: string
          minLength: 36
          maxLength: 36
          description: |
            ユニットIDは `xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx` 形式の36文字のIDです。
          example: "ed203e09-bc33-48c7-9f85-0465828be57b"
        unitName:
          type: string
          description: リクエストパラメータに指定したユニット名
          minLength: 1
          maxLength: 128
          example: "unit name"
    UnitStatusResponse:
      type: object
      properties:
        unitId:
          type: string
          minLength: 36
          maxLength: 36
          description: |
            ユニットIDは `xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx` 形式の36文字のIDです。
          example: "ed203e09-bc33-48c7-9f85-0465828be57b"
        unitName:
          type: string
          description: ユニット名
          minLength: 1
          maxLength: 255
          example: "unit name"
        dataProcessingStatus:
          type: integer
          format: int32
          description: データ化のステータス
          example: 400
        dataCheckStatus:
          type: integer
          format: int32
          description: データチェックのステータス
          example: 400
        dataCompareStatus:
          type: integer
          format: int32
          description: データコンペアのステータス
          example: 400
        csvDownloadStatus:
          type: integer
          format: int32
          description: CSVダウンロードのステータス
          example: 400
        created_at:
          type: string
          format: date-time
          description: ユニット作成日時(UTC)
          example: "2021-03-02T06:13:44.985243Z"
        updated_at:
          type: string
          format: date-time
          description: ユニット更新日時(UTC)
          example: "2021-03-02T06:13:44.985243Z"
      description: |
        ユニットの状態を下表の値でレスポンスします。
        |ステータス|値|ステータス概要|
        |---|---|---|
        |dataProcessingStatus|0|ユニットが存在しない|
        |dataProcessingStatus|200|データ化中|
        |dataProcessingStatus|400|データ化完了|
        |dataCheckStatus|0|データチェック設定無し<br>または、データ化未完了|
        |dataCheckStatus|200|データチェック中|
        |dataCheckStatus|400|データチェック完了|
        |dataCompareStatus|0|データ化中<br>または、データチェック中<br>または、データチェック完了かつコンペア対象無し|
        |dataCompareStatus|200|コンペア中|
        |dataCompareStatus|400|コンペア完了|
        |csvDownloadStatus|0|データ化中<br>または、データチェック未完了<br>または、コンペア未完了|
        |csvDownloadStatus|100|CSV未ダウンロード|
        |csvDownloadStatus|400|CSVダウンロード完了|
    CsvResponse:
      description: CSVデータ
      type: string
      example: |-
        "col1", "col2", "col3", "col4"
        "aaaa", "bbbb", "cccc", "dddd"
  responses:
    InternalServerError:
      description: サーバ内でエラーが発生しました。カスタマーサポートにお問い合わせください。
      content:
        application/json:
          examples:
            response1:
              summary: "errorCode: 80000"
              value:
                errors:
                  - errorCode: 80000
                    message: A server error has occurred. Please contact our Customer Support Team.
            response2:
              summary: "errorCode: 180000"
              value:
                errors:
                  - errorCode: 180000
                    message: A server error has occurred. Please contact our Customer Support Team.
            response3:
              summary: "errorCode: 280000"
              value:
                errors:
                  - errorCode: 280000
                    message: A server error has occurred. Please contact our Customer Support Team.
